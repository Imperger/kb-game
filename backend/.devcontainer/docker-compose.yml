version: '3.8'

services:
  backend_api:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        # Update 'VARIANT' to pick an LTS version of Node.js: 18, 16, 14.
        # Append -bullseye or -buster to pin to an OS version.
        # Use -bullseye variants on local arm64/Apple Silicon.
        VARIANT: 16-buster
    volumes:
      - ..:/workspace:cached
      - ../../certs:/workspace/certs

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    networks:
       - dev

    # Uncomment the next line to use a non-root user for all processes.
    # user: node

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  db:
    image: mongo:latest
    restart: unless-stopped
    volumes:
      - mongodb-data:/data/db
    networks:
       - dev

    # Uncomment to change startup options
    # environment:
    #  MONGO_INITDB_ROOT_USERNAME: root
    #  MONGO_INITDB_ROOT_PASSWORD: example
    #  MONGO_INITDB_DATABASE: your-database-here

    # Add "forwardPorts": ["27017"] to **devcontainer.json** to forward MongoDB locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  proxy:
    hostname: backend.dev.wsl
    image: nginx:1.23
    volumes:
      - ./nginx:/etc/nginx
      - ../../certs:/etc/nginx/ssl
    networks:
      - dev
    ports:
      - "3000:443"

  mail:
    hostname: mail.dev.wsl
    image: maildev/maildev
    networks:
      - dev
    ports:
      - "1080:1080" # web/api interface
  
  prometheus:
    image: prom/prometheus:v2.38.0
    volumes:
      - type: bind
        source: ./prometheus/prometheus.yml
        target: /etc/prometheus/prometheus.yml
        read_only: true
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - dev
    ports:
      - '9090:9090'

  grafana:
    hostname: grafana.dev.wsl
    image: grafana/grafana-oss:9.1.2
    user: "1000"
    volumes:
      - ./grafana/data:/var/lib/grafana
      - type: bind
        source: ./grafana/grafana.ini
        target: /etc/grafana/grafana.ini
        read_only: true
    networks:
      - dev

volumes:
  mongodb-data:
networks:
  dev:
    external: true   