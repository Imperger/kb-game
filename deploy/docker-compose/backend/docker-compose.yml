version: '3.8'

services:

  backend_api:
    build: 
      context: ../../../backend
      dockerfile: Dockerfile
    environment: 
      - NODE_EXTRA_CA_CERTS=/app/config/root.crt
    command: [ "-c", "/app/config/config.json" ]
    configs:
      - source: backend_config
        target: /app/config/config.json
    secrets:
      - source: ca
        target: /app/config/root.crt
    networks:
      - edge
      - db
      - backend_spawner
      - metrics

  db:
    image: mongo:focal
    volumes:
      - mongodb-data-prod:/data/db
    networks:
      - db

  prometheus:
    image: prom/prometheus:v2.38.0
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml 
    volumes:
      - prometheus-data-prod:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - metrics

  grafana:
    hostname: grafana.dev.wsl
    image: grafana/grafana-oss:9.1.2
    user: "1000"
    configs:
      - source: grafana_config
        target: /etc/grafana/grafana.ini
    volumes:
      - grafana-data-prod:/var/lib/grafana
    networks:
      - metrics
      - edge

  proxy:
    hostname: backend.dev.wsl
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - frontend_static:/frontend:ro
    configs:
      - source: nginx
        target: /etc/nginx/nginx.conf
    secrets:
      - source: certs
        target: /etc/nginx/ssl/server.cert
    networks:
      - edge
      - backend_spawner
    ports:
        - "443:443"

volumes:
  mongodb-data-prod: {}
  prometheus-data-prod: {}
  grafana-data-prod: {}
  frontend_static:
    external: true
configs:
  backend_config:
    file: ./config/backend.json 
  nginx:
    file: ./nginx/nginx.conf
  prometheus_config:
    file: ./prometheus/prometheus.yml
  grafana_config:
    file: ./grafana/grafana.ini
secrets:
  certs:
    file: ./config/server.cert
  ca:
    file: ./config/root.crt
networks:
  edge: {}
  db: {}
  metrics: {}
  backend_spawner:
    external: true